<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ldd.ssm.crm.mapper.TransportInfoMapper">
	<resultMap id="BaseResultMap" type="org.ldd.ssm.crm.domain.TransportInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="transport_name" jdbcType="VARCHAR" property="transportName" />
		<result column="transport_type" jdbcType="VARCHAR" property="transportType" />
		<result column="airport_name" jdbcType="VARCHAR" property="airportName" />
		<result column="hyperbolic" jdbcType="VARCHAR" property="hyperbolic" />
		<result column="running_time" jdbcType="VARCHAR" property="runningTime" />
		<result column="off_running_time" jdbcType="VARCHAR" property="offRunningTime" />
		<result column="sigle_trip_time" jdbcType="INTEGER" property="sigleTripTime" />
		<result column="interval_time" jdbcType="INTEGER" property="intervalTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, transport_name, transport_type, airport_name, hyperbolic,
		running_time, off_running_time,
		sigle_trip_time, interval_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_transportinfo
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_transportinfo
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="org.ldd.ssm.crm.domain.TransportInfo">
		insert into t_transportinfo (id, transport_name, transport_type,
		airport_name, hyperbolic, running_time,
		off_running_time, sigle_trip_time, intervalTime
		)
		values (#{id,jdbcType=INTEGER}, #{transportName,jdbcType=VARCHAR},
		#{transportType,jdbcType=VARCHAR},
		#{airportName,jdbcType=VARCHAR}, #{hyperbolic,jdbcType=VARCHAR}, #{runningTime,jdbcType=VARCHAR},
		#{offRunningTime,jdbcType=VARCHAR}, #{sigleTripTime,jdbcType=INTEGER},
		#{intervalTime,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.ldd.ssm.crm.domain.TransportInfo">
		insert into t_transportinfo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="transportName != null">
				transport_name,
			</if>
			<if test="transportType != null">
				transport_type,
			</if>
			<if test="airportName != null">
				airport_name,
			</if>
			<if test="hyperbolic != null">
				hyperbolic,
			</if>
			<if test="runningTime != null">
				running_time,
			</if>
			<if test="offRunningTime != null">
				off_running_time,
			</if>
			<if test="sigleTripTime != null">
				sigle_trip_time,
			</if>
			<if test="intervalTime != null">
				interval_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="transportName != null">
				#{transportName,jdbcType=VARCHAR},
			</if>
			<if test="transportType != null">
				#{transportType,jdbcType=VARCHAR},
			</if>
			<if test="airportName != null">
				#{airportName,jdbcType=VARCHAR},
			</if>
			<if test="hyperbolic != null">
				#{hyperbolic,jdbcType=VARCHAR},
			</if>
			<if test="runningTime != null">
				#{runningTime,jdbcType=VARCHAR},
			</if>
			<if test="offRunningTime != null">
				#{offRunningTime,jdbcType=VARCHAR},
			</if>
			<if test="sigleTripTime != null">
				#{sigleTripTime,jdbcType=INTEGER},
			</if>
			<if test="intervalTime != null">
				#{intervalTime,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.ldd.ssm.crm.domain.TransportInfo">
		update t_transportinfo
		<set>
			<if test="transportName != null">
				transport_name = #{transportName,jdbcType=VARCHAR},
			</if>
			<if test="transportType != null">
				transport_type = #{transportType,jdbcType=VARCHAR},
			</if>
			<if test="airportName != null">
				airport_name = #{airportName,jdbcType=VARCHAR},
			</if>
			<if test="hyperbolic != null">
				hyperbolic = #{hyperbolic,jdbcType=VARCHAR},
			</if>
			<if test="runningTime != null">
				running_time = #{runningTime,jdbcType=VARCHAR},
			</if>
			<if test="offRunningTime != null">
				off_running_time = #{offRunningTime,jdbcType=VARCHAR},
			</if>
			<if test="sigleTripTime != null">
				sigle_trip_time = #{sigleTripTime,jdbcType=INTEGER},
			</if>
			<if test="intervalTime != null">
				interval_time = #{intervalTime,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.ldd.ssm.crm.domain.TransportInfo">
		update t_transportinfo
		set transport_name = #{transportName,jdbcType=VARCHAR},
		transport_type = #{transportType,jdbcType=VARCHAR},
		airport_name = #{airportName,jdbcType=VARCHAR},
		hyperbolic = #{hyperbolic,jdbcType=VARCHAR},
		running_time = #{runningTime,jdbcType=VARCHAR},
		off_running_time = #{offRunningTime,jdbcType=VARCHAR},
		sigle_trip_time = #{sigleTripTime,jdbcType=INTEGER},
		interval_time = #{intervalTime,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_transportinfo
		where 1=1
		<if test="name !=null and name != ''">
			and airport_name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
		</if>
	</select>
</mapper>